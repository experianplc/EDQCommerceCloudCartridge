"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ReadDirOptions;
(function (ReadDirOptions) {
    /**
     * Bitwise option for making the return paths absolute URIs instead of being from the supplied base path
     */
    ReadDirOptions[ReadDirOptions["ABSOLUTE_PATHS"] = 1] = "ABSOLUTE_PATHS";
    /**
     * Bitwise option for making the return array sorted case insensitively
     */
    ReadDirOptions[ReadDirOptions["CASELESS_SORT"] = 2] = "CASELESS_SORT";
    /**
     * Bitwise option for making the return array sorted case sensitively
     */
    ReadDirOptions[ReadDirOptions["CASE_SORT"] = 4] = "CASE_SORT";
    /**
     * Bitwise option for making the return array sorted case sensitively
     */
    ReadDirOptions[ReadDirOptions["INCLUDE_DIRECTORIES"] = 8] = "INCLUDE_DIRECTORIES";
    /**
     * Bitwise option for preventing the automatic removal of paths that start with a dot
     */
    ReadDirOptions[ReadDirOptions["INCLUDE_HIDDEN"] = 16] = "INCLUDE_HIDDEN";
    /**
     * Bitwise option for preventing the directory reader running recursively
     */
    ReadDirOptions[ReadDirOptions["NON_RECURSIVE"] = 32] = "NON_RECURSIVE";
    /**
     * Bitwise option for preventing errors reading directories from aborting the scan whenever possible - includes
     * incorrectly rooted relative symlinks and missing root directory.
     */
    ReadDirOptions[ReadDirOptions["IGNORE_ERRORS"] = 64] = "IGNORE_ERRORS";
})(ReadDirOptions = exports.ReadDirOptions || (exports.ReadDirOptions = {}));
exports.ABSOLUTE_PATHS = ReadDirOptions.ABSOLUTE_PATHS;
exports.CASELESS_SORT = ReadDirOptions.CASELESS_SORT;
exports.CASE_SORT = ReadDirOptions.CASE_SORT;
exports.INCLUDE_DIRECTORIES = ReadDirOptions.INCLUDE_DIRECTORIES;
exports.INCLUDE_HIDDEN = ReadDirOptions.INCLUDE_HIDDEN;
exports.NON_RECURSIVE = ReadDirOptions.NON_RECURSIVE;
exports.IGNORE_ERRORS = ReadDirOptions.IGNORE_ERRORS;
//# sourceMappingURL=read-dir-options.js.map